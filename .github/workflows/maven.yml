# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    - name: Configure SSH
      uses: webfactory/ssh-agent@v0.5.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SSH_USERNAME }} # 这个需要你在 GitHub 仓库的 Secrets 中配置
        password: ${{ secrets.SSH_PASSWORD }} # 或者你也可以使用 SSH 密钥

    - name: Transform Jar To Server
      run: scp -o StrictHostKeyChecking=no -P ${{ secrets.SERVER_PORT }} \
          ./Gin-Main/target/Gin-Driver.jar ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/usr/local/src/gin-driver

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
        - name: Deploy to Server
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.SERVER_HOST }}
            username: ${{ secrets.SSH_USERNAME }} # 这个需要你在 GitHub 仓库的 Secrets 中配置
            password: ${{ secrets.SSH_PASSWORD }} # 或者你也可以使用 SSH 密钥
            script: |
              cd /usr/local/src/gin-driver
              sh ./stop.sh
              sh ./start.sh
              # 在这里执行你的部署命令，比如停止现有服务、备份、部署新的 JAR 文件等